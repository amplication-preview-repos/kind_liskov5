/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Component } from "@prisma/client";

export class ComponentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ComponentCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentCountArgs>
  ): Promise<number> {
    return this.prisma.component.count(args);
  }

  async components<T extends Prisma.ComponentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentFindManyArgs>
  ): Promise<Component[]> {
    return this.prisma.component.findMany(args);
  }
  async component<T extends Prisma.ComponentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentFindUniqueArgs>
  ): Promise<Component | null> {
    return this.prisma.component.findUnique(args);
  }
  async createComponent<T extends Prisma.ComponentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentCreateArgs>
  ): Promise<Component> {
    return this.prisma.component.create<T>(args);
  }
  async updateComponent<T extends Prisma.ComponentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentUpdateArgs>
  ): Promise<Component> {
    return this.prisma.component.update<T>(args);
  }
  async deleteComponent<T extends Prisma.ComponentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentDeleteArgs>
  ): Promise<Component> {
    return this.prisma.component.delete(args);
  }
}
